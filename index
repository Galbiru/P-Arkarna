<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adventure Quest 2025</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* NEW COLOR PALETTE: FUN ADVENTURE THEME */
        body {
            background-color: #f0f4c3; /* Light green background */
            background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffeb3b' fill-opacity='0.1' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E"),
                                 linear-gradient(135deg, #f0f4c3 0%, #c5e1a5 100%);
            min-height: 100vh; /* Ensure body takes full height for scrolling */
            transition: background-image 0.7s ease-in-out;
            padding-top: 60px; /* Add padding to avoid logo overlapping content */
            box-sizing: border-box; /* Include padding in element's total width and height */
        }

        #welcome-page { display: flex; flex-direction: column; justify-content: center; align-items: center; min-height: 80vh; color: #3e2723; text-align: center; padding: 1rem;}
        #welcome-page h2 { font-size: 1.5rem; font-weight: 500; text-shadow: 0 1px 2px rgba(255,255,255,0.5); }
        #welcome-page .welcome-title { font-family: 'Fantasy', 'Times New Roman', serif; font-size: 3rem; font-weight: 700; color: #6a1b9a; margin: 1rem 0 2rem 0; }
        #start-btn { background-image: linear-gradient(to right, #ff7043 0%, #d32f2f 51%, #ff7043 100%); background-size: 200% auto; color: white; padding: 1rem 2rem; border: none; border-radius: 8px; font-size: 1rem; font-weight: bold; cursor: pointer; transition: 0.5s; box-shadow: 0 4px 15px 0 rgba(0,0,0,0.2); }
        #start-btn:hover { background-position: right center; }

        .main-title { font-family: 'Fantasy', 'Times New Roman', serif; font-size: 2.5rem; font-weight: 700; margin-bottom: 0.5rem; color: #6a1b9a; text-shadow: 1px 1px 2px rgba(0,0,0,0.1); text-align: center;}
        .datetime { text-align: center; margin-bottom: 1rem; font-size: 1rem; color: #3e2723; font-weight: 600; background-color: rgba(255,255,255,0.3); backdrop-filter: blur(2px); padding: 4px; border-radius: 4px; }
        .users-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1.5rem;
            margin-bottom: 1.5rem;
            justify-items: center;
            max-height: calc(100vh - 200px); /* Adjust based on your header/footer height */
            overflow-y: auto;
            padding-right: 10px; /* Space for scrollbar */
        }

        .user-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100px;
            height: 100px;
            padding: 0.5rem;
            font-weight: 600;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.2s;
            background-image: linear-gradient(to top, #ffcc80 0%, #ffb74d 100%);
            color: #000000;
            border: 2px solid rgba(255,255,255,0.7);
            text-align: center;
            box-shadow: 0 4px 8px rgba(0,0,0,0.25);
        }
        .user-btn:hover { transform: scale(1.05); }

        .back-btn { display: block; width: 100%; padding: 0.75rem; margin-bottom: 1rem; background-color: #ffe0b2; color: #3e2723; border: 1px solid #ffcc80; border-radius: 6px; font-weight: 600; cursor: pointer; transition: background-color 0.2s; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .back-btn:hover { background-color: #ffcc80; }

        .content-container { padding: 1rem; box-sizing: border-box; background-color: rgba(255,255,255,0.05); backdrop-filter: blur(3px); border-radius: 12px; border: 1px solid rgba(255,255,255,0.2); }
        .number-grid { display: grid; grid-template-columns: repeat(1, minmax(0, 1fr)); gap: 10px; }
        .number-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 500;
            font-size: 1rem;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.2s, transform 0.2s;
            padding: 0.75rem 1rem;
            background-color: rgba(255,255,255,0.15);
            border: 1px solid rgba(255,255,255,0.25);
            color: #3e2723;
            text-decoration: none;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .number-btn:hover { transform: translateY(-1px); background-color: rgba(255,255,255,0.3); }
        .number-btn.disabled { background-color: rgba(100,116,139,0.5); border-color: rgba(100,116,139,0.7); color: #e2e8f0; cursor: not-allowed; }

        .number-btn.clicked { background-color: #6a1b9a; border-color: #d32f2f; }
        .number-btn.clicked:hover { background-color: #d32f2f; }
        .fade-transition { transition: opacity 0.5s ease-in-out; }

        .logo-top-left {
            position: fixed;
            top: 10px;
            left: 10px;
            z-index: 10;
            max-width: 80px;
            height: auto;
        }

        .instructions-text {
            color: #6a1b9a;
            text-align: center;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            font-weight: 600;
            padding: 8px;
            background-color: rgba(255,255,255,0.3);
            border-radius: 8px;
        }

        /* --- RESPONSIVE DESIGN --- */

        @media (max-width: 768px) {
            body {
                padding-top: 50px; /* Adjust padding for smaller logo */
            }

            .logo-top-left {
                max-width: 60px; /* Smaller logo on mobile */
            }

            #welcome-page .welcome-title {
                font-size: 2.2rem; /* Smaller title on mobile */
                margin: 0.5rem 0 1.5rem 0;
            }

            #welcome-page h2 {
                font-size: 1.2rem;
            }

            #start-btn {
                padding: 0.8rem 1.8rem;
                font-size: 0.9rem;
            }

            .main-title {
                font-size: 1.8rem; /* Smaller main title */
                margin-top: 0.5rem; /* Reduce top margin */
            }

            .datetime {
                font-size: 0.9rem; /* Smaller datetime font */
                padding: 3px;
            }

            .users-grid {
                grid-template-columns: repeat(2, 1fr); /* 2 columns on smaller screens */
                gap: 1rem; /* Smaller gap */
                max-height: calc(100vh - 180px); /* Adjust max height for content */
            }

            .user-btn {
                width: 80px; /* Smaller user buttons */
                height: 80px;
                font-size: 0.8rem; /* Smaller font in user buttons */
                padding: 0.25rem;
            }

            .content-container {
                padding: 0.75rem; /* Less padding in content container */
            }

            .number-btn {
                font-size: 0.9rem; /* Slightly smaller font for QNR buttons */
                padding: 0.6rem 0.8rem;
            }

            .instructions-text {
                font-size: 0.8rem; /* Smaller instructions text */
                padding: 6px;
            }
        }

        @media (max-width: 480px) {
            #welcome-page .welcome-title {
                font-size: 1.8rem;
            }

            #welcome-page h2 {
                font-size: 1rem;
            }

            .main-title {
                font-size: 1.5rem;
            }

            .users-grid {
                grid-template-columns: repeat(2, 1fr); /* Still 2 columns, might need 1 for very small */
                gap: 0.75rem;
            }

            .user-btn {
                width: 70px;
                height: 70px;
                font-size: 0.75rem;
            }

            .number-btn {
                font-size: 0.85rem;
                padding: 0.5rem 0.7rem;
            }
        }
    </style>
</head>
<body class="min-h-screen p-4">
    <img src="logo.png" alt="Adventure Quest Logo" class="logo-top-left">

    <div class="max-w-md mx-auto">
        <div id="welcome-page" class="fade-transition" style="opacity: 1;">
            <h2>WELCOME TO</h2>
            <h1 class="welcome-title">Adventure Quest</h1>
            <button id="start-btn">PRESS START TO CONTINUE</button>
        </div>
        <div id="main-view" class="fade-transition" style="display: none; opacity: 0;">
            <h1 class="main-title text-center">ADVENTURE QUEST 2025</h1>
            <div id="datetime" class="datetime"></div>
            <div id="user-buttons-container" class="users-grid"></div>
        </div>
        <div id="content-display-area"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let clickedNumbers = JSON.parse(localStorage.getItem('clickedNumbers')) || [];
            let activeContentId = null;
            let isAnimating = false;

            const originalBodyBg = document.body.style.backgroundImage;
            const linesPattern = `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffcc80' fill-opacity='0.2'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`;

            const userNames = [
                "Sri Suwarti / 30000", "Neneng N / 31000", "Evie Bungai / 32000", 
                "Poppy / 33000", "Yohana Ami / 34000", "Ninik Sri K / 35000"
            ];

            const users = userNames.map((name, index) => ({
                id: `user${index + 1}`,
                name: name,
                links: [
                    "https://survey.xmfactory.com/survey?b=1024703&l=394cc816c08c2a68", // QNR 1
                    "https://survey.xmfactory.com/survey?b=1024705&l=80b9022871e75c4c"  // QNR 2
                ]
            }));

            const welcomePage = document.getElementById('welcome-page');
            const startBtn = document.getElementById('start-btn');
            const mainView = document.getElementById('main-view');
            const userButtonsContainer = document.getElementById('user-buttons-container');
            const contentDisplayArea = document.getElementById('content-display-area');
            const mainContainer = document.querySelector('.max-w-md');

            function generateUser Assets(user) {
                const userButton = document.createElement('button');
                userButton.className = 'user-btn';
                userButton.textContent = user.name;
                userButton.dataset.target = user.id;
                userButtonsContainer.appendChild(userButton);

                let numberGridHTML = '<p class="instructions-text">Klik tombol dibawah untuk mengakses Link questionnaire<br>Good Luck Team!</p>';

                // QNR 1 button
                const qnr1Link = user.links[0];
                const qnr1Enabled = qnr1Link ? '' : 'disabled';
                const qnr1Clicked = clickedNumbers.includes(`${user.id}-qnr1`) ? 'clicked' : '';
                numberGridHTML += `<a href="${qnr1Link}" target="_blank" rel="noopener noreferrer" class="number-btn ${qnr1Enabled} ${qnr1Clicked}" data-number-id="${user.id}-qnr1">QNR 1</a>`;

                // QNR 2 button
                const qnr2Link = user.links[1];
                const qnr2Enabled = qnr2Link ? '' : 'disabled';
                const qnr2Clicked = clickedNumbers.includes(`${user.id}-qnr2`) ? 'clicked' : '';
                numberGridHTML += `<a href="${qnr2Link}" target="_blank" rel="noopener noreferrer" class="number-btn ${qnr2Enabled} ${qnr2Clicked}" data-number-id="${user.id}-qnr2">QNR 2</a>`;

                const contentWrapper = document.createElement('div');
                contentWrapper.id = user.id;
                contentWrapper.className = 'content-container fade-transition';
                contentWrapper.style.display = 'none';
                contentWrapper.style.opacity = '0';
                contentWrapper.innerHTML = `<button class="back-btn">← Kembali ke Menu Utama</button><div class="number-grid">${numberGridHTML}</div>`;
                contentDisplayArea.appendChild(contentWrapper);
            }

            function showUser GridWithZoom(targetId, clickedButton) {
                if (isAnimating) return;
                isAnimating = true;
                activeContentId = targetId;

                const rect = clickedButton.getBoundingClientRect();
                const zoomCircle = document.createElement('div');
                zoomCircle.style.position = 'fixed';
                zoomCircle.style.left = `${rect.left}px`;
                zoomCircle.style.top = `${rect.top}px`;
                zoomCircle.style.width = `${rect.width}px`;
                zoomCircle.style.height = `${rect.height}px`;
                zoomCircle.style.backgroundImage = window.getComputedStyle(clickedButton).backgroundImage;
                zoomCircle.style.borderRadius = '8px'; /* Match the square button radius */
                zoomCircle.style.zIndex = '9999';
                zoomCircle.style.transform = 'scale(1)';
                zoomCircle.style.opacity = '1';
                zoomCircle.style.transition = 'transform 0.6s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.5s ease-out';
                document.body.appendChild(zoomCircle);

                setTimeout(() => {
                    zoomCircle.style.transform = 'scale(50)';
                }, 20);

                setTimeout(() => {
                    mainView.style.opacity = '0'; // Fade out main view
                    mainView.style.display = 'none'; // Hide after fade out
                    // Change body background to fun adventure theme
                    const funAdventureGradient = `linear-gradient(135deg, #ff7043 0%, #d32f2f 100%)`;
                    document.body.style.backgroundImage = `${linesPattern}, ${funAdventureGradient}`;

                    const contentToShow = document.getElementById(targetId);
                    if (contentToShow) {
                        contentToShow.style.display = 'block';
                        // Trigger reflow for transition
                        contentToShow.offsetWidth;
                        contentToShow.style.opacity = '1'; // Fade in content
                    }
                }, 300);

                setTimeout(() => {
                    zoomCircle.style.opacity = '0'; // Fade out zoom circle
                }, 600);

                setTimeout(() => {
                    zoomCircle.remove();
                    isAnimating = false;
                }, 1200);
            }

            function showMainView() {
                if (isAnimating || !activeContentId) return;
                isAnimating = true;

                const activeContent = document.getElementById(activeContentId);
                if (activeContent) {
                    activeContent.style.opacity = '0'; // Fade out active content
                }

                // Find the original button to animate back to it
                const targetButton = document.querySelector(`.user-btn[data-target="${activeContentId}"]`);
                if (!targetButton) { isAnimating = false; return; }
                const rectTarget = targetButton.getBoundingClientRect();

                const color = window.getComputedStyle(activeContent).backgroundImage; // Use active content's background color for zoom out
                const zoomCircle = document.createElement('div');
                zoomCircle.style.position = 'fixed';
                // Start with the full screen for the "zoom out" effect
                zoomCircle.style.left = '0';
                zoomCircle.style.top = '0';
                zoomCircle.style.width = '100vw';
                zoomCircle.style.height = '100vh';
                zoomCircle.style.backgroundImage = color;
                zoomCircle.style.borderRadius = '0%'; // Start as a rectangle
                zoomCircle.style.zIndex = '9999';
                zoomCircle.style.transition = 'all 0.7s cubic-bezier(0.5, 0, 0.75, 0)';
                document.body.appendChild(zoomCircle);

                requestAnimationFrame(() => {
                    setTimeout(() => {
                        if (activeContent) {
                            activeContent.style.display = 'none';
                        }
                        mainView.style.display = 'block';
                        // Trigger reflow for transition
                        mainView.offsetWidth;
                        mainView.style.opacity = '1'; // Fade in main view
                        document.body.style.backgroundImage = originalBodyBg; // Revert to original body background

                        // Animate zoomCircle to the position and size of the target button
                        zoomCircle.style.left = `${rectTarget.left}px`;
                        zoomCircle.style.top = `${rectTarget.top}px`;
                        zoomCircle.style.width = `${rectTarget.width}px`;
                        zoomCircle.style.height = `${rectTarget.height}px`;
                        zoomCircle.style.borderRadius = '8px'; // Transition to square
                    }, 20); // Small delay to ensure display: block is applied before transition

                    setTimeout(() => {
                        zoomCircle.remove();
                        activeContentId = null;
                        isAnimating = false;
                    }, 750);
                });
            }

            function updateDateTime() {
                const now = new Date();
                const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', timeZone: 'Asia/Jakarta' };
                document.getElementById('datetime').textContent = now.toLocaleString('id-ID', options);
            }

            mainContainer.addEventListener('click', function(event) {
                const target = event.target.closest('.user-btn, .back-btn, a.number-btn');
                if (!target || isAnimating) return;

                if (target.matches('.user-btn')) {
                    showUser GridWithZoom(target.dataset.target, target);
                }
                else if (target.matches('.back-btn')) {
                    showMainView();
                }
                else if (target.matches('a.number-btn:not(.disabled)')) {
                    const numberId = target.dataset.numberId;
                    target.classList.add('clicked');
                    if (!clickedNumbers.includes(numberId)) {
                        clickedNumbers.push(numberId);
                        localStorage.setItem('clickedNumbers', JSON.stringify(clickedNumbers));
                    }
                }
                else if (target.matches('a.number-btn.disabled')) {
                    event.preventDefault(); // Prevent navigation to '#'
                    alert('Tidak ada link yang tersedia untuk tombol ini.');
                }
            });

            // Generate user buttons and their content grids
            users.forEach(generateUser Assets);

            startBtn.addEventListener('click', function() {
                if(isAnimating) return; isAnimating = true;
                welcomePage.style.opacity = '0';
                setTimeout(() => {
                    welcomePage.style.display = 'none';
                    mainView.style.display = 'block';
                    setTimeout(() => { mainView.style.opacity = '1'; isAnimating = false; }, 20);
                }, 500);
            });

            // Update date and time initially and every second
            updateDateTime();
            setInterval(updateDateTime, 1000);
        });
    </script>
</body>
</html>
